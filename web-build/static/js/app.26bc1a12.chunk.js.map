{"version":3,"sources":["reducers/productSlice.js","reducers/cartSlice.js","reducers/index.js","store/index.js","localStorage.js","components/product.js","components/product-listing.js","components/cartItem.js","components/cart.js","components/header.js","route.js","App.js"],"names":["getAllProducts","createAsyncThunk","_","a","async","rejectWithValue","console","log","fetch","response","ok","json","products","error","productSlice","createSlice","name","initialState","errorMessage","isFetching","reducers","extraReducers","pending","state","action","rejected","payload","fulfilled","cartSlice","cartItems","totalAmount","totalQuantity","addToCart","newCartItem","product","quantity","prodId","id","prodPrice","price","prodTitle","title","prodImage","image","existItem","find","x","parseInt","amount","map","removeFromCart","itemToRemove","updateCartItem","filter","length","removeProductFromCart","actions","combineReducers","cart","preloadedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","localStorageMiddleware","getState","next","result","stringify","setItem","saveState","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","Product","props","useState","setQuantity","ProductWrapper","ImageView","StyledImage","source","uri","resizeMode","Text","style","fontWeight","textAlign","toFixed","width","alignSelf","buttonStyle","backgroundColor","max","min","step","editable","rounded","showBorder","colorMax","colorMin","value","onChange","increased","View","padding","TouchableOpacity","height","borderRadius","onPress","color","fontSize","styled","Image","PageHeader","PageView","FlatView","MessageHeader","connect","loading","dispatch","handleAddToCart","showProduct","setShowProduct","page","setPage","showButton","setShowButton","index","setIndex","useEffect","slice","styles","AddFlex","FlatList","data","renderItem","item","keyExtractor","toString","newPage","newShow","prevState","StyleSheet","create","flex","CartItem","cartitem","onIncrease","onDecrease","removeProduct","handleRemoveFromCart","handleRemoveProductFromCart","HeaderWrapperView","LinkWrapperView","StyledText","InfoText","Link","component","to","RouterFile","useDispatch","NativeRouter","exact","path","ProductListing","Cart","App","SafeAreaView","AndroidSafeArea","container","alignItems","justifyContent","paddingTop","Platform","OS","StatusBar","currentHeight"],"mappings":"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","file":"static/js/app.26bc1a12.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n    products: [],\n    errorMessage: false,\n    isFetching: false\n}\nexport const getAllProducts = createAsyncThunk('products/getAllProducts', async (_, { rejectWithValue }) => {\n    console.log('fetch')\n    const response = await fetch('https://fakestoreapi.com/products')\n    if (response.ok) {\n        const products = await response.json()\n        return { products }\n    } else {\n        return rejectWithValue({ error: 'Error while loading the products' })\n    }\n})\nconst productSlice = createSlice({\n    name: 'Product',\n    initialState,\n    reducers: {\n\n    },\n    extraReducers: {\n        [getAllProducts.pending]: (state, action) => {\n            return Object.assign({}, state, {\n                products: [],\n                isFetching: true,\n                errorMessage: false\n            })\n        },\n        [getAllProducts.rejected]: (state, action) => {\n            console.log(action)\n            return Object.assign({}, state, {\n                products: [],\n                isFetching: false,\n                errorMessage: action.payload.error\n            })\n        },\n        [getAllProducts.fulfilled]: (state, action) => {\n            return Object.assign({}, {\n                products: action.payload.products,\n                isFetching: false,\n                errorMessage: false\n            })\n        }\n    }\n})\nexport default productSlice.reducer;","import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n    cartItems: [],\n    totalAmount: 0,\n    totalQuantity: 0\n}\nconst cartSlice = createSlice({\n    name: 'Cart',\n    initialState,\n    reducers: {\n        addToCart: (state, action) => {\n            const { product, quantity } = action.payload\n            const prodId = product.id,\n                prodPrice = product.price,\n                prodTitle = product.title,\n                prodImage = product.image;\n            const existItem = state.cartItems.find(x => x.id === product.id)\n            let newCartItem, cartItems, totalAmount, totalQuantity;\n            if (existItem) {\n                newCartItem = {\n                    ...existItem,\n                    quantity: parseInt(existItem.quantity, 10) + parseInt(quantity, 10),\n                    amount: existItem.amount + prodPrice * quantity\n                }\n                cartItems = state.cartItems.map(x => x.id === newCartItem.id ? newCartItem : x)\n            } else {\n                newCartItem = {\n                    id: prodId,\n                    price: prodPrice,\n                    quantity: parseInt(quantity, 10),\n                    image: prodImage,\n                    title: prodTitle,\n                    amount: prodPrice * quantity\n                }\n                cartItems = [...state.cartItems, newCartItem]\n            }\n            totalAmount = state.totalAmount + (prodPrice * quantity)\n            totalQuantity = parseInt(state.totalQuantity, 10) + parseInt(quantity, 10)\n            return Object.assign({}, state, {\n                cartItems,\n                totalAmount,\n                totalQuantity\n            })\n        },\n        removeFromCart: (state, action) => {\n            const { product } = action.payload\n            const itemToRemove = state.cartItems.find(x => x.id === product.id)\n            if (!itemToRemove) {\n                return state\n            }\n            let cartItems, totalAmount, totalQuantity;\n            if (itemToRemove.quantity > 1) {\n                let updateCartItem = {\n                    ...itemToRemove,\n                    quantity: itemToRemove.quantity - 1,\n                    amount: itemToRemove.amount - itemToRemove.price\n                }\n                cartItems = state.cartItems.map(x => x.id === updateCartItem.id ? updateCartItem : x)\n            } else {\n                cartItems = state.cartItems.filter(x => x.id !== itemToRemove.id)\n            }\n            totalAmount = cartItems.length > 0 ? state.totalAmount - itemToRemove.price : 0\n            totalQuantity = parseInt(state.totalQuantity, 10) - 1\n            return Object.assign({}, state, {\n                cartItems,\n                totalAmount,\n                totalQuantity\n            })\n        },\n        removeProductFromCart: (state, action) => {\n            const { product } = action.payload\n            const itemToRemove = state.cartItems.find(x => x.id === product.id)\n            if (!itemToRemove) {\n                return state\n            }\n            let cartItems, totalAmount, totalQuantity;\n            cartItems = state.cartItems.filter(x => x.id !== itemToRemove.id)\n            totalAmount = cartItems.length > 0 ? state.totalAmount - itemToRemove.amount : 0\n            totalQuantity = state.totalQuantity - itemToRemove.quantity\n            return Object.assign({}, state, {\n                cartItems,\n                totalAmount,\n                totalQuantity\n            })\n        }\n    }\n})\nexport const { addToCart, removeFromCart, removeProductFromCart } = cartSlice.actions\nexport default cartSlice.reducer","import product from './productSlice';\nimport { combineReducers } from 'redux';\nimport cart from './cartSlice'\n\nexport default combineReducers({\n    product,\n    cart\n})","import { configureStore } from \"@reduxjs/toolkit\";\nimport reducer from \"../reducers\";\nimport { loadState,saveState } from \"../localStorage\";\nconst preloadedState={\n    cart:loadState()\n}\nconst localStorageMiddleware = ({ getState }) => {\n    return next => action => {\n      const result = next(action);\n      // console.log(getState())\n      saveState(getState())\n      return result;\n    };\n  }\nconst store = configureStore({\n    reducer,\n    preloadedState,\n    middleware: (getDefaultMiddleware)=> getDefaultMiddleware().concat(localStorageMiddleware)\n});\nexport default store;","export const loadState = () => {\n    try {\n      const serializedState = localStorage.getItem('cart');\n  \n      if (serializedState === null) {\n        return undefined;\n      }\n  \n      return JSON.parse(serializedState);\n  \n    } catch (err) {\n      return undefined;\n    }\n  };\n  \n  export const saveState = (state) => {\n    try {\n      const serializedState = JSON.stringify(state.cart);\n      localStorage.setItem('cart', serializedState);\n    } catch (err) {\n      // die\n    }\n  };","import React, { useState } from 'react'\nimport { StyleSheet, Text, View, Image, TouchableOpacity } from 'react-native';\nimport styled from 'styled-components/native';\nimport InputSpinner from \"react-native-input-spinner\";\n\nfunction Product(props) {\n    const [quantity, setQuantity] = useState(1)\n    const handleChange = (value) => {\n        setQuantity(value)\n    }\n    return (\n        <ProductWrapper>\n            <ImageView>\n                <StyledImage source={{ uri: props.product.image }} resizeMode={'cover'} />\n            </ImageView>\n            <Text style={{ fontWeight: 'bold', textAlign: 'center' }}>{props.product.title}</Text>\n            <Text style={{ fontWeight: 'bold', textAlign: 'center' }}>Price :{props.product.price.toFixed(2)}</Text>\n            <Text style={{ fontWeight: 'bold', textAlign: 'center' }}>Quantity :</Text>\n            <InputSpinner style={{ width: 100, alignSelf: 'center' }} buttonStyle={{ width: 30, backgroundColor: '#665EAD' }} max={10} min={1} step={1} editable={false} rounded={false} showBorder={true} colorMax={\"#f04048\"} colorMin={\"#40c5f4\"} value={quantity}\n                onChange={(increased) => { setQuantity(increased) }}\n            />\n            <View style={{padding:10}}>\n            <TouchableOpacity style={{ backgroundColor:'#90EE90',width:100,height:30,alignSelf:'center',borderRadius:5 }} onPress={()=>{props.addToCart(props.product,quantity)}}>\n                <Text style={{ color:'#000',textAlign:'center',fontSize:17,fontWeight:'bold' }}>Add to Cart</Text>\n            </TouchableOpacity>\n            </View>\n        </ProductWrapper>\n    )\n}\nexport default Product\nconst StyledImage = styled.Image`\nheight: 140px;\nwidth: 109px;\n`\nconst ImageView = styled.View`\n\nalign-self:center\n`\nconst ProductWrapper = styled.View`\ntext-align: center;\npadding:10px\n`\n\n\n","import React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View ,FlatList,Button,TouchableOpacity} from 'react-native';\nimport { connect } from 'react-redux'\nimport styled from 'styled-components/native'\nimport { addToCart } from '../reducers/cartSlice'\nimport Product from './product';\n\nconst list_limit = 6\nfunction ProductListing(props) {\n  const [showProduct, setShowProduct] = useState([])\n  const [page, setPage] = useState(1)\n  const [showButton, setShowButton] = useState(true);\n  const [index, setIndex] = useState(list_limit)\n  useEffect(() => {\n    setShowProduct(props.products.slice(0, list_limit))\n  }, [props.products])\n  const handleLoadMore = () => {\n    const newPage = page + 1,\n      newShow = props.products.length > (list_limit * newPage)\n    setPage(newPage)\n    setShowButton(newShow)\n    setShowProduct(prevState => [...prevState, ...props.products.slice(index, newPage * list_limit)])\n    setIndex(newPage * list_limit)\n  }\n  const renderItem = ({ item }) => (\n    <Product product={item} addToCart={props.handleAddToCart}/>\n  )\n  return (\n    <PageView style={styles.AddFlex}>\n      <PageHeader>Product Listing</PageHeader>\n      {props.loading ? <MessageHeader>Loading the product ...</MessageHeader>:<Text></Text>}\n      <FlatView style={styles.AddFlex}>\n      <FlatList\n        data={showProduct}\n        renderItem={renderItem}\n        keyExtractor={item => item.id.toString()}\n      />\n      </FlatView>\n    {showProduct.length > 0 && showButton ?  <TouchableOpacity style={{backgroundColor:'#665EAD',width:100,height:30,alignSelf:'center'}} onPress={handleLoadMore}>\n        <Text style={{color:'#000',textAlign:'center',fontSize:17,fontWeight:'bold'}}>Load More</Text>\n    </TouchableOpacity> : <Text></Text>}\n    </PageView>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.product.isFetching,\n    products: state.product.products,\n    error: state.product.errorMessage\n  };\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleAddToCart: (product, quantity) => {\n      dispatch(addToCart({ product, quantity }))\n    }\n  }\n}\nconst PageHeader = styled.Text`\ntext-align:center;\nfont-weight:bold;\nfont-size:22px;\n`\nconst PageView = styled.View`\npadding-top:10px;\n`\nconst FlatView = styled.View`\ndisplay:flex;\nalign-items: center;\njustify-content: center;\nflex-wrap: wrap;\n`\nconst MessageHeader = styled.Text`\ntext-align:center;\nfont-weight:bold;\nfont-size:22px;\njustify-content:center;\npadding:50px\n`\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductListing)\n//make flatlist scrollable\nconst styles=StyleSheet.create({\n  AddFlex:{\n    flex:1\n  }\n})","import React, { useState ,useEffect} from 'react'\nimport { StyleSheet, Text, View, Image, TouchableOpacity } from 'react-native';\nimport styled from 'styled-components/native';\nimport InputSpinner from \"react-native-input-spinner\";\n\nfunction CartItem(props) {\n    return (\n        <ProductWrapper>\n            <ImageView>\n                <StyledImage source={{ uri: props.cartitem.image }} resizeMode={'cover'} />\n            </ImageView>\n            <Text style={{ fontWeight: 'bold', textAlign: 'center' }}>{props.cartitem.title}</Text>\n            <Text style={{ fontWeight: 'bold', textAlign: 'center' }}>Unit Price :{props.cartitem.price.toFixed(2)}</Text>\n            <Text style={{ fontWeight: 'bold', textAlign: 'center' }}>Quantity :</Text>\n            <InputSpinner style={{ width: 100, alignSelf: 'center' }} buttonStyle={{ width: 30, backgroundColor: '#665EAD' }} editable={false} max={100} min={1} step={1} rounded={false} showBorder={true} colorMax={\"#f04048\"} colorMin={\"#40c5f4\"} value={props.cartitem.quantity}\n                onIncrease={() => { props.addToCart(props.cartitem) }} onDecrease={() => { props.removeFromCart(props.cartitem)}}\n            />\n            <Text style={{ fontWeight: 'bold', textAlign: 'center' }}>Amount :{props.cartitem.amount.toFixed(2)}</Text>\n            <View style={{ padding: 10 }}>\n                <TouchableOpacity style={{ backgroundColor: 'red', width: 100, height: 30, alignSelf: 'center', borderRadius: 5 }} onPress={() => { props.removeProduct(props.cartitem) }}>\n                    <Text style={{ color: '#000', textAlign: 'center', fontSize: 17, fontWeight: 'bold' }}>Remove</Text>\n                </TouchableOpacity>\n            </View>\n        </ProductWrapper>\n    )\n}\nexport default CartItem\nconst ProductWrapper = styled.View`\ntext-align: center;\npadding:10px\n`\nconst StyledImage = styled.Image`\nheight: 140px;\nwidth: 109px;\n`\nconst ImageView = styled.View`\n\nalign-self:center\n`","import React from 'react';\nimport { StyleSheet, Text, View, FlatList } from 'react-native';\nimport { connect } from 'react-redux'\nimport styled from 'styled-components/native'\nimport { addToCart, removeFromCart, removeProductFromCart } from '../reducers/cartSlice'\nimport CartItem from './cartItem'\n\nfunction Cart(props) {\n  const renderItem = ({ item }) => (\n    <CartItem cartitem={item} addToCart={props.handleAddToCart} addToCart={props.handleAddToCart} removeFromCart={props.handleRemoveFromCart} removeProduct={props.handleRemoveProductFromCart} />\n  )\n  return (\n    <PageView style={styles.AddFlex}>\n      <PageHeader>Your Shopping Cart</PageHeader>\n      {props.cartItems.length === 0 ? <MessageHeader>You have no products in cart</MessageHeader>:<Text></Text>}\n      <FlatView style={styles.AddFlex}>\n        <FlatList\n          data={props.cartItems}\n          renderItem={renderItem}\n          keyExtractor={item => item.id.toString()}\n        />\n      </FlatView>\n    </PageView>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    cartItems: state.cart.cartItems\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleAddToCart: (product) => {\n      dispatch(addToCart({ product, quantity: 1 }))\n    },\n    handleRemoveFromCart: (product) => {\n      dispatch(removeFromCart({ product }))\n    },\n    handleRemoveProductFromCart: (product) => {\n      dispatch(removeProductFromCart({ product }))\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart)\n//make flatlist scrollable\nconst styles = StyleSheet.create({\n  AddFlex: {\n    flex: 1\n  }\n})\nconst PageHeader = styled.Text`\ntext-align:center;\nfont-weight:bold;\nfont-size:22px;\n`\nconst MessageHeader = styled.Text`\ntext-align:center;\nfont-weight:bold;\nfont-size:22px;\njustify-content:center;\npadding:50px\n`\nconst PageView = styled.View`\npadding-top:10px;\n`\nconst FlatView = styled.View`\ndisplay:flex;\nalign-items: center;\njustify-content: center;\nflex-wrap: wrap;\n`","import React from 'react';\nimport { StyleSheet, Text, View ,TouchableOpacity} from 'react-native';\nimport { NativeRouter, Route, Link } from \"react-router-native\";\nimport styled from 'styled-components/native'\nimport { connect } from 'react-redux'\nfunction Header(props) {\n    return (\n        <View>\n            <HeaderWrapperView>\n                <LinkWrapperView>\n                    <Link component={TouchableOpacity} to=\"/\">\n                        <StyledText>Home</StyledText>\n                    </Link>\n                </LinkWrapperView>\n                <LinkWrapperView>\n                    <Link component={TouchableOpacity} to=\"/cart\">\n                        <StyledText>Go to Cart</StyledText>\n                    </Link>\n                </LinkWrapperView>\n            </HeaderWrapperView>\n            <View>\n                <InfoText>Price: {props.totalAmount.toFixed(2)} Quantity: {props.totalQuantity}</InfoText>\n            </View>\n        </View>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        totalAmount: state.cart.totalAmount,\n        totalQuantity: state.cart.totalQuantity\n    }\n}\nconst HeaderWrapperView = styled.View`\n  display:flex;\n  align-items:center;\n  flex-direction: row;\n  background: #665EAD;\n  height:50px;\n  justify-content:space-between;\n`\nconst LinkWrapperView = styled.View`\n  padding:5px 15px;\n`\nconst StyledText = styled.Text`\nfont-size:20px;\nfont-weight:bold;\n`\nconst InfoText = styled.Text`\nfont-size:15px;\nfont-weight:bold;\ntext-align:right;\n`\nconst Wrapper =styled.View`\nposition: sticky;\ntop:0;\n`\nexport default connect(mapStateToProps)(Header)","import React,{useEffect} from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\n\nimport { NativeRouter, Route, Link } from \"react-router-native\";\nimport ProductListing from \"./components/product-listing\";\nimport Cart from \"./components/cart\";\nimport Header from \"./components/header\";\nimport { getAllProducts } from './reducers/productSlice'\nimport { useDispatch } from 'react-redux';\n\nexport default function RouterFile() {\n    const dispatch = useDispatch()\n    //To fetch the products\n    useEffect(() => {\n        dispatch(getAllProducts())\n        return () => { }\n      }, [dispatch])\n    return (\n        <NativeRouter>\n            <Header />\n            <Route exact path=\"/\" component={ProductListing} />\n            <Route path=\"/cart\" component={Cart} />\n        </NativeRouter>\n    );\n}","// import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport {Platform, SafeAreaView, StyleSheet, Text, View, StatusBar } from 'react-native';\nimport store from './store'\nimport { Provider } from 'react-redux';\nimport Route from './route';\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <SafeAreaView style={styles.AndroidSafeArea}>\n        <Route />\n      </SafeAreaView>\n    </Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  AndroidSafeArea: {\n    flex: 1,\n    backgroundColor: \"white\",\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\n  }\n});\n"],"sourceRoot":""}